{"version":3,"sources":["theme.js","timer.js","model.js","icons.js","emoji.js","minefield.js","App.js","registerServiceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","state","bad","good","styleToolbarCentre","margin","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","resetTimer","getElapsedTime","timeDiff","Date","getTime","startTime","minutes","Math","floor","seconds","concat","toString","padStart","timerId","clearInterval","setState","time","startTimer","setInterval","stopTimer","classes","react_default","a","createElement","Typography_default","className","variant","color","Component","FLAGS","GAME_STATUS","initialised","started","won","lost","getNearestNeighbours","position","columns","left","right","undefined","minefield","filter","value","getRandomIntInclusive","min","max","ceil","random","Model","spaces","mines","bind","placeMinesRandomlyInMinefield","upperBound","i","getContent","setContent","relocateMine","newPosition","populateNumberOfNearestMines","revealMines","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","revealed","err","return","initialiseMinefield","flag","length","arguments","maxMines","spacesLeftToReveal","Array","fill","map","curr","index","delay","id","gameStatus","trippedMineId","that","x","reduce","acc","recursiveCall","isRevealed","content","neighbours","forEach","element","reveal","prototype","regenerator_default","mark","_callee","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","wrap","_context","prev","t0","finish","stop","FlagIcon","SvgIcon_default","display","d","opacity","points","MineIcon","fillOpacity","cx","cy","r","HappyIcon","LostIcon","WonIcon","Emoji","icon","style","fontSize","Minefield","key","minefieldStyle","push","onClick","handleClick","onContextMenu","App","componentDidMount","rows","_this$getMinefieldDim","getMinefieldDimensions","difficulty","setColumnsInCSSGrid","model","timer","current","width","window","innerWidth","getNumberOfColumnsForMinefield","getNumberOfRowsForMinefield","handleChangeDifficulty","event","target","resetGame","slice","_this$getMinefieldDim2","minesToBeFound","_minefieldStyle","contentWidth","gutter","height","innerHeight","defineProperty","includes","React","createRef","assertThisInitialized","e","preventDefault","type","cycleFlag","MuiThemeProvider_default","CssBaseline_default","AppBar_default","Toolbar_default","disableGutters","Select_default","onChange","inputProps","name","MenuItem_default","Button_default","aria-label","Badge_default","padding","badgeContent","timer_Timer","ref","src_minefield","withStyles","spacing","unit","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"maAGaA,EAAQC,yBAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBE,MAAO,CACLC,IAAK,UACLC,KAAM,cAeCC,EAAqB,CAChCC,OAAQ,QChCWC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,qBAAuB,WACrBP,EAAKQ,cATYR,EAYnBS,eAAiB,WACf,IAAIC,GAAW,IAAIC,MAAOC,UAAYZ,EAAKa,UACvCC,EAAUC,KAAKC,MAAON,EAAQ,KAAT,KACrBO,EAAUF,KAAKC,MAAON,EAAQ,IAAkB,KACpD,SAAAQ,OAAUJ,EAAV,KAAAI,OAAqBD,EAAQE,WAAWC,SAAS,EAAG,OAhBnCpB,EA+BnBQ,WAAa,WACU,IAAjBR,EAAKqB,SACPC,cAActB,EAAKqB,SAErBrB,EAAKa,UAAY,KACjBb,EAAKqB,QAAU,EACfrB,EAAKuB,SAAS,CAAEC,KAAM,QArCLxB,EAwCnByB,WAAa,WACXzB,EAAKa,WAAY,IAAIF,MAAOC,UAC5BZ,EAAKqB,QAAUK,YAAY,WACzB1B,EAAKuB,SAAS,CAAEC,KAAMxB,EAAKS,oBAC1B,MA5CcT,EA+CnB2B,UAAY,WACW,IAAjB3B,EAAKqB,SACPC,cAActB,EAAKqB,UA/CrBrB,EAAK4B,QAAU7B,EAAM6B,QACrB5B,EAAKP,MAAQ,CACX+B,KAAM,MAJSxB,wEAoBjB,OACE6B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,UAAW9B,KAAKyB,QAAQ/B,OACxBqC,QAAQ,WACRC,MAAM,WAELhC,KAAKV,MAAM+B,KAAOrB,KAAKV,MAAM+B,KAAO,eA3BVY,8BCHtBC,EAAgB,EAAhBA,EAAyB,EAAzBA,EAAsC,EACtCC,EAAc,CAAEC,YAAa,EAAGC,QAAS,EAAGC,IAAK,EAAGC,KAAM,GAEvE,SAASC,EAAqBC,GAE5B,IACIC,EAAU1C,KAAK0C,QAEfC,EAAOF,EAAWC,IAAY,EAE9BE,GAASH,EAAW,GAAKC,IAAY,EAmBzC,MATa,CATJC,OAAOE,EAAY7C,KAAK8C,UAAUL,EAAWC,EAAU,GACxD1C,KAAK8C,UAAUL,EAAWC,GACzBE,OAAQC,EAAY7C,KAAK8C,UAAUL,EAAWC,EAAU,GACzDC,OAAOE,EAAY7C,KAAK8C,UAAUL,EAAW,GAC7CG,OAAQC,EAAY7C,KAAK8C,UAAUL,EAAW,GAC7CE,OAAOE,EAAY7C,KAAK8C,UAAUL,EAAWC,EAAU,GACxD1C,KAAK8C,UAAUL,EAAWC,GACzBE,OAAQC,EAAY7C,KAAK8C,UAAUL,EAAWC,EAAU,IAQzCK,OAAO,SAAAC,GAC7B,YAAiBH,IAAVG,IAKX,IAAMC,EAAwB,SAACC,EAAKC,GAGlC,OAFAD,EAAMtC,KAAKwC,KAAKF,GAChBC,EAAMvC,KAAKC,MAAMsC,GACVvC,KAAKC,MAAMD,KAAKyC,UAAYF,EAAMD,EAAM,IAAMA,OAsCjDI,aACJ,SAAAA,EAAYC,EAAQC,EAAOd,GAAU5C,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,GAEnCtD,KAAKwC,qBAAuBA,EAAqBiB,KAAKzD,MACtDA,KAAK0D,8BAvCT,WAEE,IADA,IAAMC,EAAa3D,KAAKuD,OAAS,EACxBK,EAAI,EAAGA,EAAI5D,KAAKwD,MAAOI,IAAK,CACnC,IAAInB,OAAQ,EACZ,GACEA,EAAWQ,EAAsB,EAAGU,SACC,MAA9B3D,KAAK6D,WAAWpB,IACzBzC,KAAK8D,WAAWrB,EAAU,OAgCyCgB,KACjEzD,MAEFA,KAAK+D,aA/BT,SAAsBtB,GAEpB,GAAkC,MAA9BzC,KAAK6D,WAAWpB,GAAmB,CAErC,IACIuB,EADEL,EAAa3D,KAAKuD,OAAS,EAEjC,GACES,EAAcf,EAAsB,EAAGU,SACC,MAAjC3D,KAAK6D,WAAWG,IACzBhE,KAAK8D,WAAWrB,EAAU,GAC1BzC,KAAK8D,WAAWE,EAAa,KAE7BhE,KAAKiE,iCAmB4BR,KAAKzD,MACtCA,KAAKkE,YAhBT,WAAuB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IACrB,QAAAyB,EAAAC,EAAiBvE,KAAK8C,UAAtB0B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiC,KAAxBS,EAAwBN,EAAAtB,MACZ,MAAf4B,EAAK5B,QACP4B,EAAKC,UAAW,IAHC,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,KAgBYZ,KAAKzD,MACpCA,KAAKgF,oBAAoBzB,EAAQC,EAAOd,yDAGhCD,GAER,GAAIA,EAAW,GAAKA,GAAYzC,KAAKuD,OACnC,OAAOrB,EAMT,IAAI+C,EAAOjF,KAAK8C,UAAUL,GAAUwC,KAAO,EAM3C,OALIA,EAAO/C,IACT+C,EAAO/C,GAETlC,KAAK8C,UAAUL,GAAUwC,KAAOA,EAEzBA,qCAGExC,GAET,OAAIA,EAAW,GAAKA,GAAYzC,KAAK8C,UAAUoC,OACtC,EAGFlF,KAAK8C,UAAUL,GAAUO,sCAG1BP,GAEN,OAAIA,EAAW,GAAKA,GAAYzC,KAAK8C,UAAUoC,OACtChD,EAGFlC,KAAK8C,UAAUL,GAAUwC,mDAGwB,IAAtC1B,EAAsC4B,UAAAD,OAAA,QAAArC,IAAAsC,UAAA,GAAAA,UAAA,GAA7B,GAAI3B,EAAyB2B,UAAAD,OAAA,QAAArC,IAAAsC,UAAA,GAAAA,UAAA,GAAjB,GAAIzC,EAAayC,UAAAD,OAAA,QAAArC,IAAAsC,UAAA,GAAAA,UAAA,GAAH,EAQjD5B,EAAS,KACXA,EAAS,IAEXvD,KAAKuD,OAJe,GAIN3C,KAAKwC,KAAKG,EAJJ,IAKpB,IAAM6B,EAAWpF,KAAKuD,OAAS,EAG7BvD,KAAKwD,MADHA,EAAQ4B,EACGA,EACJ5B,EAAQ,GACJ,GAEAA,EAEfxD,KAAKqF,mBAAqBrF,KAAKuD,OAASvD,KAAKwD,MAC7CxD,KAAK8C,UAAY,IAAIwC,MAAMtF,KAAKuD,QAAQgC,OAAOC,IAAI,SAACC,EAAMC,GAAP,MAAkB,CACnEC,MAAO,EACPV,KAAM/C,EACN0D,GAAIF,EACJb,UAAU,EACV7B,MAAO,KAEThD,KAAK0C,QAAUA,EACf1C,KAAK6F,WAAa1D,EAAYC,YAC9BpC,KAAK8F,eAAiB,EACtB9F,KAAK0D,gCACL1D,KAAKiE,kEAGIxB,GAET,QAAIA,EAAW,GAAKA,GAAYzC,KAAK8C,UAAUoC,SAIxClF,KAAK8C,UAAUL,GAAUoC,gEAKhC,IAAIkB,EAAO/F,KACXA,KAAK8C,UAAU0C,IAAI,SAACQ,EAAGpC,GACrB,GAAgB,MAAZoC,EAAEhD,MAAe,CACnB,IACIQ,EADahB,EAAqBrC,KAAK4F,EAAMnC,GAC1BqC,OAAO,SAACC,EAAKT,GAClC,MAAmB,MAAfA,EAAKzC,MACAkD,EAAM,EAENA,GAER,GACHF,EAAEhD,MAAQQ,EAEZ,OAAOwC,mCAIJvD,GAAiC,IAAA5C,EAAAG,KAAvBmG,EAAuBhB,UAAAD,OAAA,QAAArC,IAAAsC,UAAA,IAAAA,UAAA,GAGtC,GACE1C,EAAW,GACXA,GAAYzC,KAAK8C,UAAUoC,QAC3BlF,KAAK6F,aAAe1D,EAAYG,KAChCtC,KAAK6F,aAAe1D,EAAYI,KAEhC,OAAO,EAIPvC,KAAK6F,aAAe1D,EAAYC,aACF,MAA9BpC,KAAK6D,WAAWpB,IAEhBzC,KAAK+D,aAAatB,GAEfzC,KAAKoG,WAAW3D,KAEnBzC,KAAK8C,UAAUL,GAAUoC,UAAW,EACpC7E,KAAKqF,qBACDc,IACFnG,KAAK8C,UAAUL,GAAUkD,MAAQ1C,EAAsB,EAAG,KAI9D,IAAIoD,EAAUrG,KAAK6D,WAAWpB,GAM9B,GAJIzC,KAAK6F,aAAe1D,EAAYC,cAClCpC,KAAK6F,WAAa1D,EAAYE,SAGhB,MAAZgE,EACFrG,KAAK6F,WAAa1D,EAAYI,KAC9BvC,KAAK8F,cAAgBrD,EACrBzC,KAAKkE,mBAGF,GAAgC,IAA5BlE,KAAKqF,mBACZrF,KAAK6F,WAAa1D,EAAYG,IAC9BtC,KAAKkE,mBACA,GAAgB,IAAZmC,EAAe,CAExB,IAAIC,EAAa9D,EAAqBrC,KA3C7BH,KA2CwCyC,IAEjD6D,EAAaA,EAAWvD,OAAO,SAAAC,GAC7B,OAAQA,EAAM6B,YAGL0B,QAAQ,SAAAC,GACZA,EAAQ3B,UACXhF,EAAK4G,OAAOD,EAAQZ,IAAI,KAK9B,OAAOS,qCAGE5D,EAAUO,GAEfP,GAAY,GAAKA,EAAWzC,KAAK8C,UAAUoC,SAC7ClF,KAAK8C,UAAUL,GAAUO,MAAQA,YAMvCM,EAAMoD,UAAUlC,OAAOC,UAAvBkC,EAAAhF,EAAAiF,KAAmC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtC,EAAA,OAAA+B,EAAAhF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA1C,MAAA,OAAAoC,GAAA,EAAAC,GAAA,EAAAC,OAAAnE,EAAAuE,EAAAC,KAAA,EAAAJ,EAChBjH,KAAK8C,UADW0B,OAAAC,YAAA,UAAAqC,GAAAI,EAAAD,EAAAvC,QAAAC,KAAA,CAAAyC,EAAA1C,KAAA,SAE/B,OADOE,EADwBsC,EAAAlE,MAAAoE,EAAA1C,KAAA,EAEzBE,EAFyB,OAAAkC,GAAA,EAAAM,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,iBAAA0C,EAAAC,KAAA,GAAAD,EAAAE,GAAAF,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAE,GAAA,QAAAF,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAP,GAAA,MAAAG,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAAqC,EAAAC,KAAA,IAAAN,EAAA,CAAAK,EAAA1C,KAAA,eAAAsC,EAAA,eAAAI,EAAAG,OAAA,mBAAAH,EAAAG,OAAA,6BAAAH,EAAAI,SAAAX,EAAA7G,KAAA,8BAMpBsD,yBCjQR,SAASmE,EAAS7H,GACvB,OACE8B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAY/B,EACX8B,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,gCAAgC+B,QAAQ,SAC9CjG,EAAAC,EAAAC,cAAA,QAAM2D,KAAK,OAAOqC,EAAE,qBAEtBlG,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,WACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,gCAAgC+B,QAAQ,SAC9CjG,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,WACEiG,QAAQ,MACRC,OAAO,+DAETpG,EAAAC,EAAAC,cAAA,QAAMgG,EAAE,4FAOX,SAASG,EAASnI,GACvB,OACE8B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAY/B,EACX8B,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,QAAM2D,KAAK,OAAOqC,EAAE,qBAEtBlG,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,WACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QACEoG,YAAY,MACZJ,EAAE,iLAGJlG,EAAAC,EAAAC,cAAA,QACEgG,EAAE,8NAGJlG,EAAAC,EAAAC,cAAA,QACEgG,EAAE,yIAGJlG,EAAAC,EAAAC,cAAA,UAAQqG,GAAG,KAAKC,GAAG,KAAKC,EAAE,WAO7B,SAASC,EAAUxI,GACxB,OACE8B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAY/B,EACX8B,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,QAAM2D,KAAK,OAAOqC,EAAE,qBAEtBlG,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,WACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QACEiG,QAAQ,MACRD,EAAE,iWAKJlG,EAAAC,EAAAC,cAAA,UAAQqG,GAAG,OAAOC,GAAG,MAAMC,EAAE,QAC7BzG,EAAAC,EAAAC,cAAA,UAAQqG,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC5BzG,EAAAC,EAAAC,cAAA,QAAMgG,EAAE,yHACRlG,EAAAC,EAAAC,cAAA,QACEgG,EAAE,4LASP,SAASS,EAASzI,GACvB,OACE8B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAY/B,EACX8B,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,QAAM2D,KAAK,OAAOqC,EAAE,qBAEtBlG,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,WACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,gCACNlE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QACEiG,QAAQ,MACRD,EAAE,oZAKJlG,EAAAC,EAAAC,cAAA,QAAMgG,EAAE,8EACRlG,EAAAC,EAAAC,cAAA,WACEkG,OAAO,6HAGTpG,EAAAC,EAAAC,cAAA,QACEgG,EAAE,gLAGJlG,EAAAC,EAAAC,cAAA,WACEkG,OAAO,0IASZ,SAASQ,EAAQ1I,GACtB,OACE8B,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAY/B,EACX8B,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,kCACNlE,EAAAC,EAAAC,cAAA,QAAM2D,KAAK,OAAOqC,EAAE,qBAEtBlG,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,WACJlE,EAAAC,EAAAC,cAAA,KAAGgE,GAAG,gCACNlE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QACEiG,QAAQ,MACRD,EAAE,kSAIJlG,EAAAC,EAAAC,cAAA,WAASkG,OAAO,+DAChBpG,EAAAC,EAAAC,cAAA,WAASkG,OAAO,oEAChBpG,EAAAC,EAAAC,cAAA,QACEgG,EAAE,gLAGJlG,EAAAC,EAAAC,cAAA,QAAMgG,EAAE,6ECzIH,SAASW,EAAM3I,GAC5B,OAAQA,EAAMiG,YACZ,KAAK1D,EAAYG,IACf,OACEZ,EAAAC,EAAAC,cAAC0G,EAAD,CACExG,UAAWlC,EAAM6B,QAAQ+G,KACzBC,MAAO,CACLzG,MAAOnD,EAAME,QAAQO,MAAME,KAC3BkJ,SAAU,UAIlB,KAAKvG,EAAYI,KACf,OACEb,EAAAC,EAAAC,cAACyG,EAAD,CACEvG,UAAWlC,EAAM6B,QAAQ+G,KACzBC,MAAO,CACLzG,MAAOnD,EAAME,QAAQO,MAAMC,IAC3BmJ,SAAU,UAIlB,KAAKvG,EAAYC,YACjB,KAAKD,EAAYE,QACjB,QACE,OACEX,EAAAC,EAAAC,cAACwG,EAAD,CACEtG,UAAWlC,EAAM6B,QAAQ+G,KACzBC,MAAO,CACLzG,MAAOnD,EAAME,QAAQC,QAAQG,KAC7BuJ,SAAU,eC6CPC,GA3EG,SAAA/I,GAChB,IAAIkD,EAAY,GACZ8F,EAAM,EACNF,EAC8B,qBAAzB9I,EAAMiJ,eACT,OACAjJ,EAAMiJ,eAAeH,SANFvE,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAOzB,QAAAyB,EAAAC,EAAiB3E,EAAMkD,UAAvB0B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,KAAzBS,EAAyBN,EAAAtB,MAC5BqD,EAAU,GACd,GAAIzB,EAAKC,SACP,OAAQD,EAAK5B,OACX,KAAK,EACHqD,EAAU,GACV,MACF,IAAK,IACHA,EACE3E,EAAAC,EAAAC,cAACmG,EAAD,CACEjG,UAAS,GAAAf,OAAKnB,EAAM6B,QAAQ+G,KAAnB,KAAAzH,OACPnB,EAAMkG,gBAAkBlB,EAAKgB,GAAK,QAAU,IAE9C6C,MAAO,CACLC,SAAUA,EACV1G,MACEpC,EAAMiG,aAAe1D,EAAYG,IAC7BzD,EAAME,QAAQO,MAAME,KACpBX,EAAME,QAAQO,MAAMC,OAIhC,MAEF,QACE8G,EAAUzB,EAAK5B,MAIrB,IAAIiC,OAAI,EACR,OAAQL,EAAKK,MACX,KAAK/C,EACH+C,EACEvD,EAAAC,EAAAC,cAAC6F,EAAD,CACE3F,UAAWlC,EAAM6B,QAAQ+G,KACzBC,MAAO,CACLC,SAAUA,KAIhB,MACF,KAAKxG,EACH+C,EAAO,IACP,MACF,KAAK/C,EACL,QACE+C,EAAO,GAGXnC,EAAUgG,KACRpH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQ8G,IAAKA,GAC1BlH,EAAAC,EAAAC,cAAA,OACEE,UAAS,QAAAf,OAAU6D,EAAKC,SAAW,SAAW,GAArC,WAAA9D,OACP6D,EAAKe,OAEPoD,QAASnJ,EAAMoJ,YAAYvF,YAAWmF,GACtCK,cAAerJ,EAAMoJ,YAAYvF,YAAWmF,IAE5ClH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBmD,GAClCvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBuE,MAIvCuC,KAtEuB,MAAA9D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAwEzB,OAAOvB,GC1DHoG,eACJ,SAAAA,EAAYtJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkJ,IACjBrJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoJ,GAAA/I,KAAAH,KAAMJ,KAgBRuJ,kBAAoB,WAElB,IAAIzG,EAAS0G,EAFWC,EAGHxJ,EAAKyJ,uBAAuBzJ,EAAKP,MAAMiK,YAAzD7G,EAHqB2G,EAGrB3G,QAAS0G,EAHYC,EAGZD,KACZvJ,EAAKuB,SAAS,CAAEsB,UAAS0G,SACzBvJ,EAAK2J,oBAAoB9G,GACzB7C,EAAK4J,MAAM/G,QAAUA,EACrB7C,EAAK4J,MAAML,KAAOA,EAClBvJ,EAAKmF,oBAAoBtC,EAAU0G,EAAMvJ,EAAKP,MAAMkE,MAAOd,IAzB1C7C,EA4BnBO,qBAAuB,WACrBP,EAAK6J,MAAMC,QAAQtJ,cA7BFR,EAgCnByJ,uBAAyB,SAAAC,GAEvB,IAAMK,EAAQC,OAAOC,WACjBpH,EAAU,EAOd,MALmB,SAAf6G,IACF7G,EAAU7C,EAAKkK,+BAA+BH,IAIzC,CAAElH,UAAS0G,KADLvJ,EAAKmK,4BAA4BtH,EAAS6G,KAzCtC1J,EA6CnBkK,+BAAiC,SAAAH,GAE/B,OAAIA,GAAS,IACJ,EAELA,GAAS,IACJ,GAELA,GAAS,KACJ,GAEF,IAxDU/J,EA2DnBmK,4BAA8B,SAACtH,EAAS6G,GAItC,OAAQA,GACN,QACA,IAAK,OACH,OAAO,GAAK7G,EACd,IAAK,SACH,OAAO,IAAMA,EACf,IAAK,OACH,OAAO,IAAMA,IAtEA7C,EA2HnBoK,uBAAyB,SAAAC,GACvB,IAAIX,EAAaW,EAAMC,OAAOnH,MAC9BnD,EAAKuK,UAAUb,IA7HE1J,EAgInBmF,oBAAsB,SAACzB,EAAQC,EAAOd,GACpC7C,EAAK4J,MAAMzE,oBAAoBzB,EAAQC,EAAOd,GAC9C7C,EAAKuB,SAAS,SAAC9B,EAAOM,GAAR,MAAmB,CAC/BkD,UAAWjD,EAAK4J,MAAM3G,UAAUuH,YAnIjBxK,EA6MnBuK,UAAY,SAAAb,GACV,IAAI7G,EAASc,EAAO4F,EAKpB,OAJAvJ,EAAK6J,MAAMC,QAAQtJ,aACO,kBAAfkJ,IACTA,EAAa1J,EAAKP,MAAMiK,YAElBA,GACN,QACA,IAAK,OACH/F,EAAQ,GACR,MACF,IAAK,SACHA,EAAQ,GACR,MACF,IAAK,OACHA,EAAQ,IAfY,IAAA8G,EAkBHzK,EAAKyJ,uBAAuBC,GAA9C7G,EAlBqB4H,EAkBrB5H,QAAS0G,EAlBYkB,EAkBZlB,KACZvJ,EAAK2J,oBAAoB9G,GACzB7C,EAAKuB,SAAS,CACZsB,UACA6G,aACA/F,MAAOA,EACP+G,eAAgB/G,EAChB4F,SAEFvJ,EAAK4J,MAAM/G,QAAUA,EACrB7C,EAAK4J,MAAML,KAAOA,EAClBvJ,EAAKmF,oBAAoBoE,EAAO1G,EAASc,EAAOd,IA1O/B7C,EA6OnB2J,oBAAsB,SAAA9G,GAAW,IAAA8H,EAO3BC,EACAC,EANEC,EAASd,OAAOe,YAAc,GAE9BhB,EAAQC,OAAOC,WAEfpB,EAAQ,gDAAA3H,OADI4J,EAASf,EAAQ,GAAM,GAC3B,KAGE,IAAZlH,GAEF+H,EAAeE,EAASf,EAAQ,eAAiB,sBAEjDc,EAAS,QAETD,EAAe,OACfC,EAAS,OAEX7K,EAAKuB,SAAS,CACZyH,gBAAc2B,EAAA,GAAA1K,OAAA+K,EAAA,EAAA/K,CAAA0K,EAEX,YAAc9H,GAFH5C,OAAA+K,EAAA,EAAA/K,CAAA0K,EAIX,kBAAoBC,GAJT3K,OAAA+K,EAAA,EAAA/K,CAAA0K,EAMX,WAAaE,GANF5K,OAAA+K,EAAA,EAAA/K,CAAA0K,EAAA,WAOF9B,GAPE8B,MA9PhB3K,EAAK4B,QAAU7B,EAAM6B,QACrB5B,EAAK4J,MAAQ,IAAInG,EACjBzD,EAAKP,MAAQ,CACXiK,WAAY,CAAC,OAAQ,SAAU,QAAQuB,SAASjL,EAAKD,MAAM2J,YACvD1J,EAAKD,MAAM2J,WACX,OACJzG,UAAWjD,EAAK4J,MAAM3G,UAAUuH,QAChC7G,MAAO,GACP+G,eAAgB,GAChBlJ,KAAM,MAERxB,EAAK6J,MAAQqB,IAAMC,YACnBnL,EAAKmJ,YAAcnJ,EAAKmJ,YAAYvF,KAAjB3D,OAAAmL,EAAA,EAAAnL,QAAAmL,EAAA,EAAAnL,CAAAD,KAdFA,2EA0EP+F,EAAIsF,GAGd,GAFAA,EAAEC,iBAGAnL,KAAKyJ,MAAM5D,aAAe1D,EAAYC,aACtCpC,KAAKyJ,MAAM5D,aAAe1D,EAAYE,QAEtC,OAAQ6I,EAAEE,MACR,IAAK,QAKH,GAJIpL,KAAKyJ,MAAM5D,aAAe1D,EAAYC,cACxCpC,KAAK0J,MAAMC,QAAQtJ,aACnBL,KAAK0J,MAAMC,QAAQrI,eAEhBtB,KAAKyJ,MAAMrD,WAAWR,GAAK,CAC9B5F,KAAKyJ,MAAMhD,OAAOb,GAClB,IAAI2E,EAAiBvK,KAAKV,MAAMiL,eAE9BvK,KAAKyJ,MAAM5D,aAAe1D,EAAYG,KACtCtC,KAAKyJ,MAAM5D,aAAe1D,EAAYI,OAEtCvC,KAAK0J,MAAMC,QAAQnI,YACnB+I,EAAiB,GAEnBvK,KAAKoB,SAAS,CACZ0B,UAAW9C,KAAKyJ,MAAM3G,UAAUuH,QAChCE,mBAGJ,MACF,IAAK,cACH,IAAIA,EAAiBvK,KAAKV,MAAMiL,eAC1BtF,EAAOjF,KAAKyJ,MAAM4B,UAAUzF,GAC9BX,IAAS/C,GACXqI,IAEEtF,IAAS/C,GACXqI,IAEFvK,KAAKoB,SAAS,CACZ0B,UAAW9C,KAAKyJ,MAAM3G,UAAUuH,QAChCE,qDAsBR,OACE7I,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CAAkB9C,MAAOA,GACvB6C,EAAAC,EAAAC,cAAC2J,EAAA5J,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC4J,EAAA7J,EAAD,CAAQc,SAAS,SACff,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,CAAS+J,gBAAgB,EAAMjD,MAAOhJ,GACpCiC,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CACEG,UAAW9B,KAAKyB,QAAQ/B,OACxBsC,MAAM,GACNgB,MAAOhD,KAAKV,MAAMiK,WAClBqC,SAAU5L,KAAKiK,uBACf4B,WAAY,CACVC,KAAM,aACNlG,GAAI,sBAGNlE,EAAAC,EAAAC,cAACmK,EAAApK,EAAD,CAAUqB,MAAO,QAAjB,QACAtB,EAAAC,EAAAC,cAACmK,EAAApK,EAAD,CAAUqB,MAAO,UAAjB,UACAtB,EAAAC,EAAAC,cAACmK,EAAApK,EAAD,CAAUqB,MAAO,QAAjB,SAEFtB,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACEI,QAAQ,MACRC,MAAM,UACNiK,aAAW,QACXlD,QAAS/I,KAAKoK,WAEd1I,EAAAC,EAAAC,cAAC2G,EAAD,CACE9G,QAASzB,KAAKyB,QACdoE,WAAY7F,KAAKyJ,MAAM5D,cAG3BnE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,UAAW9B,KAAKyB,QAAQ/B,OACxBsC,MAAM,UACND,QAAQ,cAERL,EAAAC,EAAAC,cAACsK,EAAAvK,EAAD,CACEG,UAAW9B,KAAKyB,QAAQ0K,QACxBC,aAAcpM,KAAKV,MAAMiL,eACzBvI,MAAM,aAHR,UAQFN,EAAAC,EAAAC,cAACyK,EAAD,CACEhL,KAAMrB,KAAKV,MAAM+B,KACjBI,QAASzB,KAAKyB,QACd6K,IAAKtM,KAAK0J,UAIhBhI,EAAAC,EAAAC,cAAA,OACEE,UAAS,aAAAf,OAAef,KAAKV,MAAMiK,YACnCd,MAAOzI,KAAKV,MAAMuJ,gBAElBnH,EAAAC,EAAAC,cAAC2K,GAAD,CACE9K,QAASzB,KAAKyB,QACdqB,UAAW9C,KAAKV,MAAMwD,UACtB+F,eAAgB7I,KAAKV,MAAMuJ,eAC3BG,YAAahJ,KAAKgJ,YAClBlD,cAAe9F,KAAKyJ,MAAM3D,cAC1BD,WAAY7F,KAAKyJ,MAAM5D,uBAtMnB5D,aAkRHuK,wBN5QO,SAAA3N,GAAK,MAAK,CAC9Ba,OAAQ,CACNA,OAA6B,EAArBb,EAAM4N,QAAQC,MAExBP,QAAS,CACPA,QAAO,KAAApL,OAA4B,EAArBlC,EAAM4N,QAAQC,KAArB,SMuQIF,CAAmBtD,IC3R5ByD,GAAcC,QACW,cAA7B/C,OAAOgD,SAASC,UAEe,UAA7BjD,OAAOgD,SAASC,UAEhBjD,OAAOgD,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlO,QACf4N,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCxEjEC,IAASC,OAAOvM,EAAAC,EAAAC,cAACsM,GAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,qBAAwBzE,OAAOgD,UAC3C0B,SAAW1E,OAAOgD,SAAS0B,OAIvC,OAGF1E,OAAO2E,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAlM,OAAMuN,qBAAN,sBAEP3B,IAiDV,SAAiCM,GAE/BwB,MAAMxB,GACHI,KAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BxD,OAAOgD,SAASoC,aAKpBjC,GAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAqB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,GAAgBC,MCxCxBkC","file":"static/js/main.01e00356.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\n// define theme colours\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#9be7ff',\n      main: '#64b5f6',\n      dark: '#2286c3',\n      contrastText: '#263238'\n    },\n    secondary: {\n      light: '#ffe97d',\n      main: '#ffb74d',\n      dark: '#c88719',\n      contrastText: '#263238'\n    },\n    state: {\n      bad: '#e57373',\n      good: '#81c784'\n    }\n  }\n});\n\n// override theme styling\nexport const styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit * 2\n  },\n  padding: {\n    padding: `0 ${theme.spacing.unit * 2}px`\n  }\n});\n\nexport const styleToolbarCentre = {\n  margin: 'auto'\n};\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      time: null\n    };\n  }\n\n  componentWillUnmount = () => {\n    this.resetTimer();\n  };\n\n  getElapsedTime = () => {\n    let timeDiff = new Date().getTime() - this.startTime;\n    let minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  render() {\n    return (\n      <Typography\n        className={this.classes.margin}\n        variant=\"headline\"\n        color=\"inherit\"\n      >\n        {this.state.time ? this.state.time : '0:00'}\n      </Typography>\n    );\n  }\n\n  resetTimer = () => {\n    if (this.timerId !== 0) {\n      clearInterval(this.timerId);\n    }\n    this.startTime = null;\n    this.timerId = 0;\n    this.setState({ time: null });\n  };\n\n  startTimer = () => {\n    this.startTime = new Date().getTime();\n    this.timerId = setInterval(() => {\n      this.setState({ time: this.getElapsedTime() });\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    if (this.timerId !== 0) {\n      clearInterval(this.timerId);\n    }\n  };\n}\n","export const FLAGS = { none: 0, mine: 1, possible: 2 };\nexport const GAME_STATUS = { initialised: 0, started: 1, won: 2, lost: 3 };\n\nfunction getNearestNeighbours(position) {\n  // work out the nearest neighbours for the given minefield location\n  let neighbours = [];\n  let columns = this.columns;\n  // is the current position on the left of the minefield?\n  let left = position % columns === 0;\n  // is the current position on the right of the minefield?\n  let right = (position + 1) % columns === 0;\n  let nw = left ? undefined : this.minefield[position - columns - 1];\n  let n = this.minefield[position - columns];\n  let ne = right ? undefined : this.minefield[position - columns + 1];\n  let w = left ? undefined : this.minefield[position - 1];\n  let e = right ? undefined : this.minefield[position + 1];\n  let sw = left ? undefined : this.minefield[position + columns - 1];\n  let s = this.minefield[position + columns];\n  let se = right ? undefined : this.minefield[position + columns + 1];\n  // prettier-ignore\n  neighbours = [\n    nw, n, ne,\n     w,     e,\n    sw, s, se\n  ];\n  // exclude neighbours that are outside the minefield\n  neighbours = neighbours.filter(value => {\n    return value !== undefined;\n  });\n  return neighbours;\n}\n\nconst getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; // The minimum and maximum are inclusive\n};\n\nfunction placeMinesRandomlyInMinefield() {\n  const upperBound = this.spaces - 1;\n  for (let i = 0; i < this.mines; i++) {\n    let position;\n    do {\n      position = getRandomIntInclusive(0, upperBound);\n    } while (this.getContent(position) === '*');\n    this.setContent(position, '*');\n  }\n}\n\nfunction relocateMine(position) {\n  // check that there's a mine at the specified position\n  if (this.getContent(position) === '*') {\n    // move the mine somewhere else\n    const upperBound = this.spaces - 1;\n    let newPosition;\n    do {\n      newPosition = getRandomIntInclusive(0, upperBound);\n    } while (this.getContent(newPosition) === '*');\n    this.setContent(position, 0);\n    this.setContent(newPosition, '*');\n    // recalculate number of nearest mines\n    this.populateNumberOfNearestMines();\n  }\n}\n\nfunction revealMines() {\n  for (let item of this.minefield) {\n    if (item.value === '*') {\n      item.revealed = true;\n    }\n  }\n}\n\nclass Model {\n  constructor(spaces, mines, columns) {\n    // bind private functions to this class\n    this.getNearestNeighbours = getNearestNeighbours.bind(this);\n    this.placeMinesRandomlyInMinefield = placeMinesRandomlyInMinefield.bind(\n      this\n    );\n    this.relocateMine = relocateMine.bind(this);\n    this.revealMines = revealMines.bind(this);\n    this.initialiseMinefield(spaces, mines, columns);\n  }\n\n  cycleFlag(position) {\n    // if the position is invalid return FLAGS.none\n    if (position < 0 || position >= this.spaces) {\n      return FLAGS.none;\n    }\n    // cycle through flags\n    // the enumeration is in the order that the flags cycle through\n    // so adding one will cycle through the flags in the correct order\n    // once upper bound is reached reset to beginning\n    let flag = this.minefield[position].flag + 1;\n    if (flag > FLAGS.possible) {\n      flag = FLAGS.none;\n    }\n    this.minefield[position].flag = flag;\n    // return the new flag at the given position\n    return flag;\n  }\n\n  getContent(position) {\n    // if the position is invalid return 0\n    if (position < 0 || position >= this.minefield.length) {\n      return 0;\n    }\n    // return the content at the given position\n    return this.minefield[position].value;\n  }\n\n  getFlag(position) {\n    // if the position is invalid return no flag\n    if (position < 0 || position >= this.minefield.length) {\n      return FLAGS.none;\n    }\n    // return the flag at the given position\n    return this.minefield[position].flag;\n  }\n\n  initialiseMinefield(spaces = 72, mines = 10, columns = 8) {\n    // number of spaces should be at least 72\n    // number of spaces should be exactly divisible by 72\n    //   this is so that all rows are full at all screen sizes\n    // number of mines should not exceed 50% of the available space\n\n    // round the available space to the nearest factor of 72\n    const divisibleBy = 72;\n    if (spaces < 72) {\n      spaces = 72;\n    }\n    this.spaces = Math.ceil(spaces / divisibleBy) * divisibleBy;\n    const maxMines = this.spaces / 2;\n\n    if (mines > maxMines) {\n      this.mines = maxMines;\n    } else if (mines < 10) {\n      this.mines = 10;\n    } else {\n      this.mines = mines;\n    }\n    this.spacesLeftToReveal = this.spaces - this.mines;\n    this.minefield = new Array(this.spaces).fill().map((curr, index) => ({\n      delay: 0,\n      flag: FLAGS.none,\n      id: index,\n      revealed: false,\n      value: 0\n    }));\n    this.columns = columns;\n    this.gameStatus = GAME_STATUS.initialised;\n    this.trippedMineId = -1;\n    this.placeMinesRandomlyInMinefield();\n    this.populateNumberOfNearestMines();\n  }\n\n  isRevealed(position) {\n    // if the position is invalid return false\n    if (position < 0 || position >= this.minefield.length) {\n      return false;\n    }\n    // return whether the content is revealed or not at the given position\n    return this.minefield[position].revealed;\n  }\n\n  populateNumberOfNearestMines() {\n    // work out the number of nearest mines for each minefield location\n    let that = this;\n    this.minefield.map((x, i) => {\n      if (x.value !== '*') {\n        let neighbours = getNearestNeighbours.call(that, i);\n        let mines = neighbours.reduce((acc, curr) => {\n          if (curr.value === '*') {\n            return acc + 1;\n          } else {\n            return acc;\n          }\n        }, 0);\n        x.value = mines;\n      }\n      return x;\n    });\n  }\n\n  reveal(position, recursiveCall = false) {\n    let that = this;\n    // if the position is invalid, or the game is over, return 0\n    if (\n      position < 0 ||\n      position >= this.minefield.length ||\n      this.gameStatus === GAME_STATUS.won ||\n      this.gameStatus === GAME_STATUS.lost\n    ) {\n      return 0;\n    }\n    // if first click will reveal a mine then relocate it\n    if (\n      this.gameStatus === GAME_STATUS.initialised &&\n      this.getContent(position) === '*'\n    ) {\n      this.relocateMine(position);\n    }\n    if (!this.isRevealed(position)) {\n      // mark content as revealed\n      this.minefield[position].revealed = true;\n      this.spacesLeftToReveal--;\n      if (recursiveCall) {\n        this.minefield[position].delay = getRandomIntInclusive(1, 5);\n      }\n    }\n    // store the content of the revealed position\n    let content = this.getContent(position);\n    // Start the game if it isn't already started\n    if (this.gameStatus === GAME_STATUS.initialised) {\n      this.gameStatus = GAME_STATUS.started;\n    }\n    // if a mine has been revealed then it's game over\n    if (content === '*') {\n      this.gameStatus = GAME_STATUS.lost;\n      this.trippedMineId = position;\n      this.revealMines();\n    }\n    // if all spaces are revealed except for mines then the game is won\n    else if (this.spacesLeftToReveal === 0) {\n      this.gameStatus = GAME_STATUS.won;\n      this.revealMines();\n    } else if (content === 0) {\n      // get nearest neighbours to reveal\n      let neighbours = getNearestNeighbours.call(that, position);\n      // filter out neighbours that have already been revealed\n      neighbours = neighbours.filter(value => {\n        return !value.revealed;\n      });\n      // recursively reveal each neighbour\n      neighbours.forEach(element => {\n        if (!element.revealed) {\n          this.reveal(element.id, true);\n        }\n      });\n    }\n    // return the content at the given position\n    return content;\n  }\n\n  setContent(position, value) {\n    // if the position is valid\n    if (position >= 0 && position < this.minefield.length) {\n      this.minefield[position].value = value;\n    }\n  }\n}\n\n// iterate over Model using a generator\nModel.prototype[Symbol.iterator] = function*() {\n  for (let item of this.minefield) {\n    yield item;\n  }\n};\n\nexport default Model;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport function FlagIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <g id=\"Bounding_Boxes\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_3\" display=\"none\" />\n        <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n      </g>\n      <g id=\"Duotone\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" display=\"none\" />\n        <g>\n          <polygon\n            opacity=\"0.3\"\n            points=\"12.36,6 7,6 7,12 14.24,12 14.64,14 18,14 18,8 12.76,8 \t\t\"\n          />\n          <path d=\"M14.4,6L14,4H5v17h2v-7h5.6l0.4,2h7V6H14.4z M18,14h-3.36l-0.4-2H7V6h5.36l0.4,2H18V14z\" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nexport function MineIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <g id=\"Bounding_Boxes\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_3\" />\n        <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n      </g>\n      <g id=\"Duotone\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" />\n        <g>\n          <path\n            fillOpacity=\"0.3\"\n            d=\"M18,9.52V6h-3.52L12,3.52L9.52,6H6v3.52L3.52,12L6,14.48V18h3.52L12,20.48L14.48,18H18v-3.52L20.48,12\n            L18,9.52z M12,18c-3.31,0-6-2.69-6-6s2.69-6,6-6s6,2.69,6,6S15.31,18,12,18z\"\n          />\n          <path\n            d=\"M20,8.69V4h-4.69L12,0.69L8.69,4H4v4.69L0.69,12L4,15.31V20h4.69L12,23.31L15.31,20H20v-4.69L23.31,12L20,8.69z M18,14.48\n            V18h-3.52L12,20.48L9.52,18H6v-3.52L3.52,12L6,9.52V6h3.52L12,3.52L14.48,6H18v3.52L20.48,12L18,14.48z\"\n          />\n          <path\n            d=\"M12,6c-3.31,0-6,2.69-6,6s2.69,6,6,6s6-2.69,6-6S15.31,6,12,6z M12,16c-2.21,0-4-1.79-4-4s1.79-4,4-4c2.21,0,4,1.79,4,4\n            S14.21,16,12,16z\"\n          />\n          <circle cx=\"12\" cy=\"12\" r=\"2.5\" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nexport function HappyIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <g id=\"Bounding_Boxes\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" />\n        <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n      </g>\n      <g id=\"Duotone\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_3\" />\n        <g>\n          <path\n            opacity=\"0.3\"\n            d=\"M12,4c-4.42,0-8,3.58-8,8c0,4.42,3.58,8,8,8s8-3.58,8-8C20,7.58,16.42,4,12,4z M15.5,8\n\t\t\tC16.33,8,17,8.67,17,9.5S16.33,11,15.5,11S14,10.33,14,9.5S14.67,8,15.5,8z M8.5,8C9.33,8,10,8.67,10,9.5S9.33,11,8.5,11\n\t\t\tS7,10.33,7,9.5S7.67,8,8.5,8z M12,17.5c-2.33,0-4.32-1.45-5.12-3.5h1.67c0.7,1.19,1.97,2,3.45,2s2.76-0.81,3.45-2h1.67\n\t\t\tC16.32,16.05,14.33,17.5,12,17.5z\"\n          />\n          <circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\" />\n          <circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\" />\n          <path d=\"M12,16c-1.48,0-2.75-0.81-3.45-2H6.88c0.8,2.05,2.79,3.5,5.12,3.5s4.32-1.45,5.12-3.5h-1.67C14.76,15.19,13.48,16,12,16z\" />\n          <path\n            d=\"M11.99,2C6.47,2,2,6.48,2,12c0,5.52,4.47,10,9.99,10C17.52,22,22,17.52,22,12C22,6.48,17.52,2,11.99,2z M12,20\n\t\t\tc-4.42,0-8-3.58-8-8c0-4.42,3.58-8,8-8s8,3.58,8,8C20,16.42,16.42,20,12,20z\"\n          />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nexport function LostIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <g id=\"Bounding_Boxes\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" />\n        <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n      </g>\n      <g id=\"Duotone\">\n        <g id=\"ui_x5F_spec_x5F_header_copy\" />\n        <g>\n          <path\n            opacity=\"0.3\"\n            d=\"M12,4c-4.42,0-8,3.58-8,8c0,4.42,3.58,8,8,8s8-3.58,8-8C20,7.58,16.42,4,12,4z M6.76,8.82l1.06-1.06\n\t\t\tl1.06,1.06l1.06-1.06L11,8.82L9.94,9.88L11,10.94L9.94,12l-1.06-1.06L7.82,12l-1.06-1.06l1.06-1.06L6.76,8.82z M6.89,17\n\t\t\tc0.8-2.04,2.78-3.5,5.11-3.5s4.31,1.46,5.11,3.5H6.89z M17.24,10.94L16.18,12l-1.06-1.06L14.06,12L13,10.94l1.06-1.06L13,8.82\n\t\t\tl1.06-1.06l1.06,1.06l1.06-1.06l1.06,1.06l-1.06,1.06L17.24,10.94z\"\n          />\n          <path d=\"M12,13.5c-2.33,0-4.31,1.46-5.11,3.5h10.22C16.31,14.96,14.33,13.5,12,13.5z\" />\n          <polygon\n            points=\"7.82,12 8.88,10.94 9.94,12 11,10.94 9.94,9.88 11,8.82 9.94,7.76 8.88,8.82 7.82,7.76 6.76,8.82 7.82,9.88 \n\t\t\t6.76,10.94 \t\t\"\n          />\n          <path\n            d=\"M11.99,2C6.47,2,2,6.47,2,12c0,5.53,4.47,10,9.99,10S22,17.53,22,12C22,6.47,17.52,2,11.99,2z M12,20c-4.42,0-8-3.58-8-8\n\t\t\tc0-4.42,3.58-8,8-8s8,3.58,8,8C20,16.42,16.42,20,12,20z\"\n          />\n          <polygon\n            points=\"16.18,7.76 15.12,8.82 14.06,7.76 13,8.82 14.06,9.88 13,10.94 14.06,12 15.12,10.94 16.18,12 17.24,10.94 \n\t\t\t16.18,9.88 17.24,8.82 \t\t\"\n          />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nexport function WonIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <g id=\"Bounding_Boxes\">\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" />\n        <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n      </g>\n      <g id=\"Duotone\">\n        <g id=\"ui_x5F_spec_x5F_header_copy\" />\n        <g>\n          <path\n            opacity=\"0.3\"\n            d=\"M12,4c-4.42,0-8,3.58-8,8c0,4.42,3.58,8,8,8s8-3.58,8-8C20,7.58,16.42,4,12,4z M8.88,7.82L11,9.94L9.94,11\n          L8.88,9.94L7.82,11L6.76,9.94L8.88,7.82z M12,17.5c-2.33,0-4.31-1.46-5.11-3.5h10.22C16.31,16.04,14.33,17.5,12,17.5z M16.18,11\n          l-1.06-1.06L14.06,11L13,9.94l2.12-2.12l2.12,2.12L16.18,11z\"\n          />\n          <polygon points=\"8.88,9.94 9.94,11 11,9.94 8.88,7.82 6.76,9.94 7.82,11 \t\t\" />\n          <polygon points=\"13,9.94 14.06,11 15.12,9.94 16.18,11 17.24,9.94 15.12,7.82 \t\t\" />\n          <path\n            d=\"M11.99,2C6.47,2,2,6.47,2,12c0,5.53,4.47,10,9.99,10S22,17.53,22,12C22,6.47,17.52,2,11.99,2z M12,20c-4.42,0-8-3.58-8-8\n          c0-4.42,3.58-8,8-8s8,3.58,8,8C20,16.42,16.42,20,12,20z\"\n          />\n          <path d=\"M12,17.5c2.33,0,4.31-1.46,5.11-3.5H6.89C7.69,16.04,9.67,17.5,12,17.5z\" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n","import React from 'react';\nimport { GAME_STATUS } from './model.js';\nimport { HappyIcon, LostIcon, WonIcon } from './icons.js';\nimport { theme } from './theme.js';\n\nexport default function Emoji(props) {\n  switch (props.gameStatus) {\n    case GAME_STATUS.won:\n      return (\n        <WonIcon\n          className={props.classes.icon}\n          style={{\n            color: theme.palette.state.good,\n            fontSize: '48px'\n          }}\n        />\n      );\n    case GAME_STATUS.lost:\n      return (\n        <LostIcon\n          className={props.classes.icon}\n          style={{\n            color: theme.palette.state.bad,\n            fontSize: '48px'\n          }}\n        />\n      );\n    case GAME_STATUS.initialised:\n    case GAME_STATUS.started:\n    default:\n      return (\n        <HappyIcon\n          className={props.classes.icon}\n          style={{\n            color: theme.palette.primary.dark,\n            fontSize: '48px'\n          }}\n        />\n      );\n  }\n}\n","import React from 'react';\nimport { FlagIcon, MineIcon } from './icons.js';\nimport { theme } from './theme.js';\nimport { FLAGS, GAME_STATUS } from './model.js';\n\nconst Minefield = props => {\n  let minefield = [];\n  let key = 0;\n  let fontSize =\n    typeof props.minefieldStyle === 'undefined'\n      ? '100%'\n      : props.minefieldStyle.fontSize;\n  for (let item of props.minefield) {\n    let content = '';\n    if (item.revealed) {\n      switch (item.value) {\n        case 0:\n          content = '';\n          break;\n        case '*':\n          content = (\n            <MineIcon\n              className={`${props.classes.icon} ${\n                props.trippedMineId === item.id ? 'pulse' : ''\n              }`}\n              style={{\n                fontSize: fontSize,\n                color:\n                  props.gameStatus === GAME_STATUS.won\n                    ? theme.palette.state.good\n                    : theme.palette.state.bad\n              }}\n            />\n          );\n          break;\n\n        default:\n          content = item.value;\n          break;\n      }\n    }\n    let flag;\n    switch (item.flag) {\n      case FLAGS.mine:\n        flag = (\n          <FlagIcon\n            className={props.classes.icon}\n            style={{\n              fontSize: fontSize\n            }}\n          />\n        );\n        break;\n      case FLAGS.possible:\n        flag = '?';\n        break;\n      case FLAGS.none:\n      default:\n        flag = '';\n        break;\n    }\n    minefield.push(\n      <div className=\"scene\" key={key}>\n        <div\n          className={`card ${item.revealed ? 'reveal' : ''} delay-${\n            item.delay\n          }`}\n          onClick={props.handleClick.bind(this, key)}\n          onContextMenu={props.handleClick.bind(this, key)}\n        >\n          <div className=\"card-face front\">{flag}</div>\n          <div className=\"card-face back\">{content}</div>\n        </div>\n      </div>\n    );\n    key++;\n  }\n  return minefield;\n};\n\nexport default Minefield;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { theme, styles, styleToolbarCentre } from './theme.js';\nimport Timer from './timer.js';\nimport Emoji from './emoji.js';\nimport Minefield from './minefield.js';\nimport Model, { FLAGS, GAME_STATUS } from './model.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.model = new Model();\n    this.state = {\n      difficulty: ['easy', 'medium', 'hard'].includes(this.props.difficulty)\n        ? this.props.difficulty\n        : 'easy',\n      minefield: this.model.minefield.slice(),\n      mines: 10,\n      minesToBeFound: 10,\n      time: null\n    };\n    this.timer = React.createRef();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount = () => {\n    // set the size of the minefield\n    let columns, rows;\n    ({ columns, rows } = this.getMinefieldDimensions(this.state.difficulty));\n    this.setState({ columns, rows });\n    this.setColumnsInCSSGrid(columns);\n    this.model.columns = columns;\n    this.model.rows = rows;\n    this.initialiseMinefield(columns * rows, this.state.mines, columns);\n  };\n\n  componentWillUnmount = () => {\n    this.timer.current.resetTimer();\n  };\n\n  getMinefieldDimensions = difficulty => {\n    // get the screen width\n    const width = window.innerWidth;\n    let columns = 8; // default to 8 columns in easy mode\n    // work out the optimum number for columns for the screen width\n    if (difficulty !== 'easy') {\n      columns = this.getNumberOfColumnsForMinefield(width);\n    }\n    // work out the number of rows required for the chosen difficulty\n    const rows = this.getNumberOfRowsForMinefield(columns, difficulty);\n    return { columns, rows };\n  };\n\n  getNumberOfColumnsForMinefield = width => {\n    // return the optimum number for columns for the screen width\n    if (width <= 480) {\n      return 8;\n    }\n    if (width <= 768) {\n      return 12;\n    }\n    if (width <= 1024) {\n      return 18;\n    }\n    return 24;\n  };\n\n  getNumberOfRowsForMinefield = (columns, difficulty) => {\n    // there are 3 difficulty levels\n    // each has a given number of total grid squares\n    // from that, the number of rows can be derived\n    switch (difficulty) {\n      default:\n      case 'easy':\n        return 72 / columns;\n      case 'medium':\n        return 288 / columns;\n      case 'hard':\n        return 504 / columns;\n    }\n  };\n\n  handleClick(id, e) {\n    e.preventDefault();\n    // if the game is initialised or started then process click\n    if (\n      this.model.gameStatus === GAME_STATUS.initialised ||\n      this.model.gameStatus === GAME_STATUS.started\n    ) {\n      switch (e.type) {\n        case 'click':\n          if (this.model.gameStatus === GAME_STATUS.initialised) {\n            this.timer.current.resetTimer();\n            this.timer.current.startTimer();\n          }\n          if (!this.model.isRevealed(id)) {\n            this.model.reveal(id);\n            let minesToBeFound = this.state.minesToBeFound;\n            if (\n              this.model.gameStatus === GAME_STATUS.won ||\n              this.model.gameStatus === GAME_STATUS.lost\n            ) {\n              this.timer.current.stopTimer();\n              minesToBeFound = 0;\n            }\n            this.setState({\n              minefield: this.model.minefield.slice(),\n              minesToBeFound\n            });\n          }\n          break;\n        case 'contextmenu':\n          let minesToBeFound = this.state.minesToBeFound;\n          const flag = this.model.cycleFlag(id);\n          if (flag === FLAGS.mine) {\n            minesToBeFound--;\n          }\n          if (flag === FLAGS.possible) {\n            minesToBeFound++;\n          }\n          this.setState({\n            minefield: this.model.minefield.slice(),\n            minesToBeFound\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  handleChangeDifficulty = event => {\n    let difficulty = event.target.value;\n    this.resetGame(difficulty);\n  };\n\n  initialiseMinefield = (spaces, mines, columns) => {\n    this.model.initialiseMinefield(spaces, mines, columns);\n    this.setState((state, props) => ({\n      minefield: this.model.minefield.slice()\n    }));\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <AppBar position=\"fixed\">\n            <Toolbar disableGutters={true} style={styleToolbarCentre}>\n              <Select\n                className={this.classes.margin}\n                color=\"\"\n                value={this.state.difficulty}\n                onChange={this.handleChangeDifficulty}\n                inputProps={{\n                  name: 'difficulty',\n                  id: 'select-difficulty'\n                }}\n              >\n                <MenuItem value={'easy'}>Easy</MenuItem>\n                <MenuItem value={'medium'}>Medium</MenuItem>\n                <MenuItem value={'hard'}>Hard</MenuItem>\n              </Select>\n              <Button\n                variant=\"fab\"\n                color=\"default\"\n                aria-label=\"reset\"\n                onClick={this.resetGame}\n              >\n                <Emoji\n                  classes={this.classes}\n                  gameStatus={this.model.gameStatus}\n                />\n              </Button>\n              <Typography\n                className={this.classes.margin}\n                color=\"inherit\"\n                variant=\"subheading\"\n              >\n                <Badge\n                  className={this.classes.padding}\n                  badgeContent={this.state.minesToBeFound}\n                  color=\"secondary\"\n                >\n                  Mines\n                </Badge>\n              </Typography>\n              <Timer\n                time={this.state.time}\n                classes={this.classes}\n                ref={this.timer}\n              />\n            </Toolbar>\n          </AppBar>\n          <div\n            className={`minefield ${this.state.difficulty}`}\n            style={this.state.minefieldStyle}\n          >\n            <Minefield\n              classes={this.classes}\n              minefield={this.state.minefield}\n              minefieldStyle={this.state.minefieldStyle}\n              handleClick={this.handleClick}\n              trippedMineId={this.model.trippedMineId}\n              gameStatus={this.model.gameStatus}\n            />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n\n  resetGame = difficulty => {\n    let columns, mines, rows;\n    this.timer.current.resetTimer();\n    if (typeof difficulty !== 'string') {\n      difficulty = this.state.difficulty;\n    }\n    switch (difficulty) {\n      default:\n      case 'easy':\n        mines = 10;\n        break;\n      case 'medium':\n        mines = 40;\n        break;\n      case 'hard':\n        mines = 100;\n        break;\n    }\n    ({ columns, rows } = this.getMinefieldDimensions(difficulty));\n    this.setColumnsInCSSGrid(columns);\n    this.setState({\n      columns,\n      difficulty,\n      mines: mines,\n      minesToBeFound: mines,\n      rows\n    });\n    this.model.columns = columns;\n    this.model.rows = rows;\n    this.initialiseMinefield(rows * columns, mines, columns);\n  };\n\n  setColumnsInCSSGrid = columns => {\n    // available screen height - toolbar height\n    const height = window.innerHeight - 64;\n    // available screen width\n    const width = window.innerWidth;\n    const fontRatio = height > width ? 0.5 : 0.6;\n    const fontSize = `calc(var(--content-width) / var(--columns) * ${fontRatio})`;\n    let contentWidth;\n    let gutter;\n    if (columns === 8) {\n      // easy mode with 8 columns so limit width so that whole minefield is visible on screen\n      contentWidth = height > width ? 'calc(96vmin)' : 'calc(80vmin - 64px)';\n      // font size proportional to row height\n      gutter = '1vh';\n    } else {\n      contentWidth = '96vw';\n      gutter = '1vw';\n    }\n    this.setState({\n      minefieldStyle: {\n        // eslint-disable-next-line\n        ['--columns']: columns,\n        // eslint-disable-next-line\n        ['--content-width']: contentWidth,\n        // eslint-disable-next-line\n        ['--gutter']: gutter,\n        fontSize: fontSize\n      }\n    });\n  };\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}